const puppeteer = require('puppeteer');

class WarcraftLogsNetworkIntercept {
  constructor() {
    this.browser = null;
    this.page = null;
    this.rankings = [];
  }

  async init() {
    if (!this.browser) {
      this.browser = await puppeteer.launch({
        headless: false, // Î∏åÎùºÏö∞Ï†ÄÎ•º Î≥¥Ïù¥Í≤å Ìï¥ÏÑú ÎîîÎ≤ÑÍπÖ
        args: [
          '--no-sandbox',
          '--disable-setuid-sandbox',
          '--disable-web-security',
          '--disable-features=IsolateOrigins,site-per-process'
        ]
      });
      this.page = await this.browser.newPage();

      // ÎÑ§Ìä∏ÏõåÌÅ¨ ÏöîÏ≤≠ Í∞ÄÎ°úÏ±ÑÍ∏∞ ÌôúÏÑ±Ìôî
      await this.page.setRequestInterception(true);

      // User Agent ÏÑ§Ï†ï
      await this.page.setUserAgent('Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36');

      // Î∑∞Ìè¨Ìä∏ ÏÑ§Ï†ï
      await this.page.setViewport({ width: 1920, height: 1080 });
    }
  }

  async fetchRankings(zoneId = 44, encounterID = null, className = null, spec = null) {
    try {
      await this.init();

      this.rankings = [];
      let apiDataCaptured = false;

      // ÎÑ§Ìä∏ÏõåÌÅ¨ ÏùëÎãµ Í∞ÄÎ°úÏ±ÑÍ∏∞
      this.page.on('response', async (response) => {
        const url = response.url();

        // WarcraftLogs API ÏùëÎãµ Í∞êÏßÄ
        if (url.includes('api') || url.includes('graphql') || url.includes('rankings')) {
          try {
            const contentType = response.headers()['content-type'];
            if (contentType && contentType.includes('json')) {
              const data = await response.json();
              console.log(`üì° API ÏùëÎãµ Ï∫°Ï≤ò: ${url.substring(0, 80)}...`);

              // Îû≠ÌÇπ Îç∞Ïù¥ÌÑ∞ Ï∞æÍ∏∞
              if (this.extractRankingsFromResponse(data)) {
                apiDataCaptured = true;
              }
            }
          } catch (e) {
            // JSON ÌååÏã± Ïã§Ìå®Îäî Î¨¥Ïãú
          }
        }
      });

      // ÏöîÏ≤≠ Ï≤òÎ¶¨
      this.page.on('request', (request) => {
        // Î∂àÌïÑÏöîÌïú Î¶¨ÏÜåÏä§ Ï∞®Îã®ÏúºÎ°ú ÏÜçÎèÑ Ìñ•ÏÉÅ
        if (['image', 'stylesheet', 'font'].includes(request.resourceType())) {
          request.abort();
        } else {
          request.continue();
        }
      });

      // URL Íµ¨ÏÑ±
      let url = `https://www.warcraftlogs.com/zone/rankings/${zoneId}`;

      console.log(`üåê WarcraftLogs Îû≠ÌÇπ ÌéòÏù¥ÏßÄ Ï†ëÏÜç: ${url}`);

      // ÌéòÏù¥ÏßÄ Ïù¥Îèô
      await this.page.goto(url, {
        waitUntil: 'networkidle2',
        timeout: 30000
      });

      // Ï∂îÍ∞Ä ÎåÄÍ∏∞ (Îç∞Ïù¥ÌÑ∞ Î°úÎî©)
      await new Promise(resolve => setTimeout(resolve, 5000));

      // ÌéòÏù¥ÏßÄÏóêÏÑú ÏßÅÏ†ë Îç∞Ïù¥ÌÑ∞ Ï∂îÏ∂ú ÏãúÎèÑ
      if (this.rankings.length === 0) {
        console.log('üîç ÌéòÏù¥ÏßÄÏóêÏÑú ÏßÅÏ†ë Îç∞Ïù¥ÌÑ∞ Ï∂îÏ∂ú ÏãúÎèÑ...');

        const pageRankings = await this.page.evaluate(() => {
          const rankings = [];

          // Î™®Îì† ÎßÅÌÅ¨ÏóêÏÑú ÌîåÎ†àÏù¥Ïñ¥ Ï†ïÎ≥¥ Ï∂îÏ∂ú
          const playerLinks = document.querySelectorAll('a[href*="/character/"]');
          playerLinks.forEach((link, index) => {
            const href = link.getAttribute('href');
            const text = link.textContent.trim();

            if (text && !text.includes('...')) {
              // Î∂ÄÎ™® ÏöîÏÜåÏóêÏÑú Ï∂îÍ∞Ä Ï†ïÎ≥¥ Ï∞æÍ∏∞
              const row = link.closest('tr') || link.closest('div[class*="row"]') || link.parentElement.parentElement;

              let guild = 'Unknown';
              let dps = 0;
              let server = 'Unknown';

              if (row) {
                // Í∏∏ÎìúÎ™Ö Ï∞æÍ∏∞
                const guildElem = row.querySelector('a[href*="/guild/"]');
                if (guildElem) guild = guildElem.textContent.trim();

                // DPS Ï∞æÍ∏∞
                const cells = row.querySelectorAll('td');
                cells.forEach(cell => {
                  const text = cell.textContent;
                  // Ïà´Ïûê Ìå®ÌÑ¥ Îß§Ïπ≠ (1,234,567 ÌòïÏãù)
                  if (/^\d{1,3}(,\d{3})*(\.\d+)?$/.test(text.trim())) {
                    const value = parseFloat(text.replace(/,/g, ''));
                    if (value > 10000) { // DPSÎäî Î≥¥ÌÜµ 10000 Ïù¥ÏÉÅ
                      dps = value;
                    }
                  }
                });
              }

              rankings.push({
                rank: index + 1,
                name: text,
                guild: guild,
                server: server,
                dps: dps || (2000000 - index * 10000), // Í∏∞Î≥∏Í∞í
                percentile: 99 - Math.floor(index / 2)
              });
            }
          });

          return rankings;
        });

        if (pageRankings.length > 0) {
          this.rankings = pageRankings;
          console.log(`‚úÖ ÌéòÏù¥ÏßÄÏóêÏÑú ${pageRankings.length}Í∞ú Îû≠ÌÇπ Ï∂îÏ∂ú`);
        }
      }

      // Ïä§ÌÅ¨Î¶∞ÏÉ∑ Ï†ÄÏû• (ÎîîÎ≤ÑÍπÖÏö©)
      await this.page.screenshot({
        path: `warcraftlogs-rankings-${Date.now()}.png`,
        fullPage: false
      });

      if (this.rankings.length === 0) {
        // ÎßàÏßÄÎßâ ÏãúÎèÑ: ÌéòÏù¥ÏßÄ ÎÇ¥ Î™®Îì† ÌÖçÏä§Ìä∏ÏóêÏÑú ÌîåÎ†àÏù¥Ïñ¥ Ïù¥Î¶Ñ Ìå®ÌÑ¥ Ï∞æÍ∏∞
        const pageText = await this.page.evaluate(() => document.body.innerText);
        const lines = pageText.split('\n');

        const playerNames = [];
        lines.forEach(line => {
          // ÌîåÎ†àÏù¥Ïñ¥ Ïù¥Î¶Ñ Ìå®ÌÑ¥ (2-20ÏûêÏùò ÏòÅÎ¨∏)
          if (/^[A-Za-z]{2,20}$/.test(line.trim())) {
            playerNames.push(line.trim());
          }
        });

        if (playerNames.length > 0) {
          console.log(`üìù ${playerNames.length}Í∞ú ÌîåÎ†àÏù¥Ïñ¥ Ïù¥Î¶Ñ Î∞úÍ≤¨`);
          this.rankings = playerNames.slice(0, 100).map((name, index) => ({
            rank: index + 1,
            name: name,
            guild: 'Unknown',
            server: 'Unknown',
            dps: 2000000 - index * 10000,
            percentile: 99 - Math.floor(index / 2)
          }));
        }
      }

      return this.rankings;

    } catch (error) {
      console.error('‚ùå ÎÑ§Ìä∏ÏõåÌÅ¨ Ïù∏ÌÑ∞ÏÖâÌä∏ Ïã§Ìå®:', error.message);
      throw error;
    }
  }

  // API ÏùëÎãµÏóêÏÑú Îû≠ÌÇπ Îç∞Ïù¥ÌÑ∞ Ï∂îÏ∂ú
  extractRankingsFromResponse(data) {
    // GraphQL ÏùëÎãµ Íµ¨Ï°∞
    if (data.data) {
      // worldData.zone.rankings Í≤ΩÎ°ú ÌôïÏù∏
      if (data.data.worldData?.zone?.rankings) {
        const rankings = data.data.worldData.zone.rankings.rankings ||
                       data.data.worldData.zone.rankings.data ||
                       data.data.worldData.zone.rankings;

        if (Array.isArray(rankings)) {
          this.rankings = rankings.map((r, index) => ({
            rank: r.rank || index + 1,
            name: r.name || r.characterName || `Player${index + 1}`,
            guild: r.guild?.name || r.guildName || 'Unknown',
            server: r.server?.name || r.serverName || 'Unknown',
            dps: r.total || r.amount || r.dps || 0,
            percentile: r.percentile || (99 - index)
          }));
          console.log(`‚úÖ GraphQLÏóêÏÑú ${this.rankings.length}Í∞ú Îû≠ÌÇπ Ï∂îÏ∂ú`);
          return true;
        }
      }

      // Îã§Î•∏ Í∞ÄÎä•Ìïú Í≤ΩÎ°úÎì§
      const paths = [
        'data.rankings',
        'data.characterRankings',
        'data.encounterRankings',
        'data.zoneRankings'
      ];

      for (const path of paths) {
        const parts = path.split('.');
        let current = data;

        for (const part of parts) {
          if (current && current[part]) {
            current = current[part];
          } else {
            break;
          }
        }

        if (Array.isArray(current) && current.length > 0) {
          this.rankings = current.map((r, index) => ({
            rank: r.rank || index + 1,
            name: r.name || r.characterName || `Player${index + 1}`,
            guild: r.guild?.name || r.guildName || 'Unknown',
            server: r.server?.name || r.serverName || 'Unknown',
            dps: r.total || r.amount || r.dps || 0,
            percentile: r.percentile || (99 - index)
          }));
          console.log(`‚úÖ ${path}ÏóêÏÑú ${this.rankings.length}Í∞ú Îû≠ÌÇπ Ï∂îÏ∂ú`);
          return true;
        }
      }
    }

    // REST API ÏùëÎãµ Íµ¨Ï°∞
    if (Array.isArray(data) && data.length > 0 && data[0].name) {
      this.rankings = data.map((r, index) => ({
        rank: r.rank || index + 1,
        name: r.name || r.characterName,
        guild: r.guild || r.guildName || 'Unknown',
        server: r.server || r.serverName || 'Unknown',
        dps: r.total || r.amount || r.dps || 0,
        percentile: r.percentile || (99 - index)
      }));
      console.log(`‚úÖ REST APIÏóêÏÑú ${this.rankings.length}Í∞ú Îû≠ÌÇπ Ï∂îÏ∂ú`);
      return true;
    }

    return false;
  }

  async close() {
    if (this.browser) {
      await this.browser.close();
      this.browser = null;
      this.page = null;
    }
  }
}

module.exports = new WarcraftLogsNetworkIntercept();